mongo "mongodb+srv://fleetmanager-xixqp.mongodb.net/test"  --username Admin

Admin password: Dshirt49300770

Mongodb Atlas, cloud based datadase.

show dbs : shows all dbs that are not empty
show collections : Shows all the collections within a db
insertOne()
insertMany()
use <database name>: creates a databse if not already created
db.users.insertOne({name:'John', age: 49}) : This creates the users collection and inserts the object into it
					John is in '' as it is a string 
					{} creates the object similar to a json object, as a key pair
					name is the key and John is the value.

db.users.insertMany([{name:'Paddy', age: 12}, {name: 'Eilidh', age: 10}]) : for insert many the obects to be inserted 
										must be inside {} inside [] as we are inserting
										an array of objects

db.users.find() : finds all the objects within the collection

db.users.find({age: {$gt: 25}}) : return all objects whose age is greater than 25

db.users.insertOne({ name: "", age: ,address : { street:"", city:""}})  : this inserts the address details as a new document within the user document

db.user.find({"address.street": 'First Street'}) : this searches the embeded document address for the street named first street and returns all entries

db.users.update({name: 'Paddy'}, {$set : {age : 20}}) : This will set Paddys age to 20 and keep all other info on Paddy unchanged
							If the $ sign is not used age: 20 will be written to Paddy's id and overwrite all info on Paddy

db.users.deleteOne({name: 'Paddy'})
 


Look into Mongo Compass

		

research

https://www.dotnetcurry.com/nodejs/1144/nodejs-html-static-pages-website

https://stackoverflow.com/questions/3809401/what-is-a-good-regular-expression-to-match-a-url

https://www.lifewire.com/file-extensions-and-mime-types-3469109

https://www.youtube.com/watch?v=QE8lgVErCCI
https://www.youtube.com/watch?v=7Uekm0IgzQ4	

https://www.tutorialsteacher.com/nodejs/access-mongodb-in-nodejs

https://www.guru99.com/node-js-mongodb.html

http://mongodb.github.io/node-mongodb-native/3.0/quick-start/quick-start/

http://www.passportjs.org/docs/username-password/

https://www.mongodb.com/blog/post/password-authentication-with-mongoose-part-1

https://medium.com/@bhanushali.mahesh3/building-a-restful-crud-api-with-node-js-jwt-bcrypt-express-and-mongodb-4e1fb20b7f3d

https://mongoosejs.com/docs/guide.html

https://www.youtube.com/watch?v=rOfT83_eKWk

https://www.youtube.com/watch?v=ZKwrOXl5TDI

https://www.youtube.com/watch?v=vjf774RKrLc          <StartAllOverAgain>